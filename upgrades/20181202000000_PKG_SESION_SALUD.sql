create or replace PACKAGE SESION_SALUD_PKG
IS
PROCEDURE sesion_salud_agregar (
			id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE,
			num_ses_salud IN SESION_SALUD.NUM_SESION_SALUD%TYPE,
			nom_ses_salud IN SESION_SALUD.NOMBRE_SESION_SALUD%TYPE,
			cupos_ses IN SESION_SALUD.CUPOS_SESION%TYPE,
			f_sesion IN SESION_SALUD.FECHA_SESION%TYPE,
			h_inicio_sal IN VARCHAR2,
			h_term_sal IN VARCHAR2,
			descrip_ses IN SESION_SALUD.DESCRIPCION_SESION_SALUD%TYPE,			
			med_id_med IN SESION_SALUD.MEDICO_ID_MEDICO%TYPE,
			exa_id_exa IN SESION_SALUD.EXAMENES_ID_EXAMEN%TYPE,
			est_ses IN SESION_SALUD.ESTADO%TYPE,
      cur OUT SYS_REFCURSOR);
PROCEDURE sesion_salud_eliminar (id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE, est_ses IN SESION_SALUD.ESTADO%TYPE);
PROCEDURE sesion_salud_modificar (
			num_ses_salud IN SESION_SALUD.NUM_SESION_SALUD%TYPE,
			nom_ses_salud IN SESION_SALUD.NOMBRE_SESION_SALUD%TYPE,
			cupos_ses IN SESION_SALUD.CUPOS_SESION%TYPE,
			f_sesion IN SESION_SALUD.FECHA_SESION%TYPE,
			h_inicio_sal IN SESION_SALUD.HORA_INICIO_SALUD%TYPE,
			h_term_sal IN SESION_SALUD.HORA_TERMINO_SALUD%TYPE,
			descrip_ses IN SESION_SALUD.DESCRIPCION_SESION_SALUD%TYPE,			
			med_id_med IN SESION_SALUD.MEDICO_ID_MEDICO%TYPE,
			exa_id_exa IN SESION_SALUD.EXAMENES_ID_EXAMEN%TYPE,
			est_ses IN SESION_SALUD.ESTADO%TYPE,
			id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE);
PROCEDURE sesion_salud_consultar (id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE, cur OUT SYS_REFCURSOR);
PROCEDURE All_sesion_salud_consultar (est_ses IN SESION_SALUD.ESTADO%TYPE, cur OUT SYS_REFCURSOR);
END SESION_SALUD_PKG;
/

create or replace PACKAGE BODY SESION_SALUD_PKG
IS
PROCEDURE sesion_salud_agregar (
			id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE,
			num_ses_salud IN SESION_SALUD.NUM_SESION_SALUD%TYPE,
			nom_ses_salud IN SESION_SALUD.NOMBRE_SESION_SALUD%TYPE,
			cupos_ses IN SESION_SALUD.CUPOS_SESION%TYPE,
			f_sesion IN SESION_SALUD.FECHA_SESION%TYPE,
			h_inicio_sal IN VARCHAR2,
			h_term_sal IN VARCHAR2,
			descrip_ses IN SESION_SALUD.DESCRIPCION_SESION_SALUD%TYPE,			
			med_id_med IN SESION_SALUD.MEDICO_ID_MEDICO%TYPE,
			exa_id_exa IN SESION_SALUD.EXAMENES_ID_EXAMEN%TYPE,
			est_ses IN SESION_SALUD.ESTADO%TYPE,
      cur OUT SYS_REFCURSOR)
IS 
contar NUMBER(1) := 0;
resp SESION_SALUD.ID_SESION_SALUD%TYPE;
BEGIN
SELECT COUNT(*) INTO contar
FROM SESION_SALUD
WHERE ID_SESION_SALUD = id_ses_salud;	
IF contar = 0 THEN 
  INSERT INTO SESION_SALUD VALUES (id_ses_salud, num_ses_salud, nom_ses_salud, cupos_ses, (TO_DATE(f_sesion,'dd-mm-rr')), (TO_DATE(h_inicio_sal,'dd-mm-rr HH24:MI:SS')), 
                                  (TO_DATE(h_term_sal, 'dd-mm-rr HH24:MI:SS')), descrip_ses, med_id_med, exa_id_exa, est_ses);
  OPEN cur FOR
  SELECT ID_SESION_SALUD, NUM_SESION_SALUD, NOMBRE_SESION_SALUD, CUPOS_SESION, FECHA_SESION, HORA_INICIO_SALUD, 
         HORA_TERMINO_SALUD, DESCRIPCION_SESION_SALUD, MEDICO_ID_MEDICO, EXAMENES_ID_EXAMEN, ESTADO
  FROM SESION_SALUD
  WHERE ID_SESION_SALUD = (SELECT MAX(ID_SESION_SALUD) FROM SESION_SALUD);
  COMMIT;
ELSE
  RAISE_APPLICATION_ERROR(-20001, 'La sesion Existe, No se puede agregar la sesion al sistema');
  ROLLBACK;
END IF;  
END sesion_salud_agregar;

PROCEDURE sesion_salud_eliminar (id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE, est_ses IN SESION_SALUD.ESTADO%TYPE)
IS
contar NUMBER(1) := 0;
resp SESION_SALUD.ID_SESION_SALUD%TYPE;
BEGIN
SELECT COUNT(*) INTO contar
FROM SESION_SALUD
WHERE ID_SESION_SALUD = id_ses_salud;
IF contar = 1 THEN 
  UPDATE SESION_SALUD SET ESTADO = est_ses
  WHERE ID_SESION_SALUD = id_ses_salud
  RETURNING id_ses_salud INTO resp;
  COMMIT;
ELSE
  RAISE_APPLICATION_ERROR(-20002, 'La sesión NO Existe, Verifique sesión');
  ROLLBACK;
END IF; 
END sesion_salud_eliminar;

PROCEDURE sesion_salud_modificar (
			num_ses_salud IN SESION_SALUD.NUM_SESION_SALUD%TYPE,
			nom_ses_salud IN SESION_SALUD.NOMBRE_SESION_SALUD%TYPE,
			cupos_ses IN SESION_SALUD.CUPOS_SESION%TYPE,
			f_sesion IN SESION_SALUD.FECHA_SESION%TYPE,
			h_inicio_sal IN SESION_SALUD.HORA_INICIO_SALUD%TYPE,
			h_term_sal IN SESION_SALUD.HORA_TERMINO_SALUD%TYPE,
			descrip_ses IN SESION_SALUD.DESCRIPCION_SESION_SALUD%TYPE,			
			med_id_med IN SESION_SALUD.MEDICO_ID_MEDICO%TYPE,
			exa_id_exa IN SESION_SALUD.EXAMENES_ID_EXAMEN%TYPE,
			est_ses IN SESION_SALUD.ESTADO%TYPE,
			id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE)
IS
contar NUMBER(1) := 0;
resp SESION_SALUD.ID_SESION_SALUD%TYPE;
BEGIN
SELECT COUNT(*) INTO contar
FROM SESION_SALUD
WHERE ID_SESION_SALUD = id_ses_salud;
IF contar = 1 THEN 
  UPDATE SESION_SALUD SET 
                  NUM_SESION_SALUD = num_ses_salud, 
                  NOMBRE_SESION_SALUD = nom_ses_salud, 
                  CUPOS_SESION = cupos_ses,
                  FECHA_SESION = f_sesion,
                  HORA_INICIO_SALUD = h_inicio_sal,
                  HORA_TERMINO_SALUD = h_term_sal,
                  DESCRIPCION_SESION_SALUD = descrip_ses,
                  MEDICO_ID_MEDICO = med_id_med,
                  EXAMENES_ID_EXAMEN = exa_id_exa,
                  ESTADO = est_ses
  WHERE ID_SESION_SALUD = id_ses_salud RETURNING id_ses_salud INTO resp;
  COMMIT;
ELSE
  RAISE_APPLICATION_ERROR(-20002, 'La sesión NO Existe, Verifique sesión');
  ROLLBACK;
END IF;  
END sesion_salud_modificar;

PROCEDURE sesion_salud_consultar (id_ses_salud IN SESION_SALUD.ID_SESION_SALUD%TYPE, cur OUT SYS_REFCURSOR)
IS
contar NUMBER(1) := 0;
BEGIN
SELECT COUNT(*) INTO contar
FROM SESION_SALUD
WHERE ID_SESION_SALUD = id_ses_salud;
IF contar = 1 THEN 
  OPEN cur FOR
  SELECT ID_SESION_SALUD, NUM_SESION_SALUD, NOMBRE_SESION_SALUD, CUPOS_SESION, FECHA_SESION, HORA_INICIO_SALUD,
	 HORA_TERMINO_SALUD, DESCRIPCION_SESION_SALUD, MEDICO_ID_MEDICO, EXAMENES_ID_EXAMEN, ESTADO
  FROM SESION_SALUD
  WHERE ID_SESION_SALUD = id_ses_salud AND ESTADO > 0;
  COMMIT;
ELSE
  RAISE_APPLICATION_ERROR(-20002, 'La sesión NO Existe, Verifique sesión');
  ROLLBACK;
END IF; 
END sesion_salud_consultar;

PROCEDURE All_sesion_salud_consultar (est_ses IN SESION_SALUD.ESTADO%TYPE, cur OUT SYS_REFCURSOR)
IS
BEGIN
  OPEN cur FOR
  SELECT ID_SESION_SALUD, NUM_SESION_SALUD, NOMBRE_SESION_SALUD, CUPOS_SESION, FECHA_SESION, HORA_INICIO_SALUD,
	 HORA_TERMINO_SALUD, DESCRIPCION_SESION_SALUD, MEDICO_ID_MEDICO, EXAMENES_ID_EXAMEN, ESTADO
  FROM SESION_SALUD
  WHERE ESTADO = est_ses;
  COMMIT;
END All_sesion_salud_consultar;
END SESION_SALUD_PKG;
/